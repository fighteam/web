{"ast":null,"code":"import \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Demo\\\\React-Administrator\\\\react-administrator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/input-number/style/css\";\nimport _InputNumber from \"antd/es/input-number\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Demo\\\\React-Administrator\\\\react-administrator\\\\src\\\\Menu\\\\Rankinglist\\\\rankinglist.js\";\nimport React from 'react';\nimport { Link, BrowserRouter, Route } from 'react-router-dom';\n\nvar RankinglistCSS = require('./rankinglist.css');\n\nconst data = [];\n\nfor (let i = 0; i < 20; i++) {\n  data.push({\n    key: i.toString(),\n    name: \"Edrward \".concat(i),\n    age: 32,\n    address: \"London Park no. \".concat(i)\n  });\n}\n\nconst EditableContext = React.createContext();\nexport default class RankinglistPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getInput = () => {\n      if (this.props.inputType === 'number') {\n        return React.createElement(_InputNumber, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    };\n\n    this.renderCell = ({\n      getFieldDecorator\n    }) => {\n      const _this$props = this.props,\n            editing = _this$props.editing,\n            dataIndex = _this$props.dataIndex,\n            title = _this$props.title,\n            inputType = _this$props.inputType,\n            record = _this$props.record,\n            index = _this$props.index,\n            children = _this$props.children,\n            restProps = _objectWithoutProperties(_this$props, [\"editing\", \"dataIndex\", \"title\", \"inputType\", \"record\", \"index\", \"children\"]);\n\n      return React.createElement(\"td\", Object.assign({}, restProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), editing ? React.createElement(_Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"Please Input \".concat(title, \"!\")\n        }],\n        initialValue: record[dataIndex]\n      })(this.getInput())) : children);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: RankinglistCSS.menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: RankinglistCSS.addlist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\DELL\\Desktop\\Demo\\React-Administrator\\react-administrator\\src\\Menu\\Rankinglist\\rankinglist.js"],"names":["React","Link","BrowserRouter","Route","RankinglistCSS","require","data","i","push","key","toString","name","age","address","EditableContext","createContext","RankinglistPage","Component","getInput","props","inputType","renderCell","getFieldDecorator","editing","dataIndex","title","record","index","children","restProps","margin","rules","required","message","initialValue","render","menu","addlist"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAaC,aAAb,EAA2BC,KAA3B,QAAuC,kBAAvC;;AAGA,IAAIC,cAAc,GAAEC,OAAO,CAAC,mBAAD,CAA3B;;AAEA,MAAMC,IAAI,GAAG,EAAb;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,IAAAA,GAAG,EAAEF,CAAC,CAACG,QAAF,EADG;AAERC,IAAAA,IAAI,oBAAaJ,CAAb,CAFI;AAGRK,IAAAA,GAAG,EAAE,EAHG;AAIRC,IAAAA,OAAO,4BAAqBN,CAArB;AAJC,GAAV;AAMD;;AACD,MAAMO,eAAe,GAAGd,KAAK,CAACe,aAAN,EAAxB;AAEA,eAAe,MAAMC,eAAN,SAA8BhB,KAAK,CAACiB,SAApC,CAA6C;AAAA;AAAA;;AAAA,SACxDC,QADwD,GAC7C,MAAM;AACb,UAAI,KAAKC,KAAL,CAAWC,SAAX,KAAyB,QAA7B,EAAuC;AACrC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KANqD;;AAAA,SAMnDC,UANmD,GAMtC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAA2B;AAAA,0BAUrC,KAAKH,KAVgC;AAAA,YAEvCI,OAFuC,eAEvCA,OAFuC;AAAA,YAGvCC,SAHuC,eAGvCA,SAHuC;AAAA,YAIvCC,KAJuC,eAIvCA,KAJuC;AAAA,YAKvCL,SALuC,eAKvCA,SALuC;AAAA,YAMvCM,MANuC,eAMvCA,MANuC;AAAA,YAOvCC,KAPuC,eAOvCA,KAPuC;AAAA,YAQvCC,QARuC,eAQvCA,QARuC;AAAA,YASpCC,SAToC;;AAWzC,aACE,4CAAQA,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGN,OAAO,GACN,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAE;AAAEO,UAAAA,MAAM,EAAE;AAAV,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGR,iBAAiB,CAACE,SAAD,EAAY;AAC5BO,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,QAAQ,EAAE,IADZ;AAEEC,UAAAA,OAAO,yBAAkBR,KAAlB;AAFT,SADK,CADqB;AAO5BS,QAAAA,YAAY,EAAER,MAAM,CAACF,SAAD;AAPQ,OAAZ,CAAjB,CAQE,KAAKN,QAAL,EARF,CADH,CADM,GAaNU,QAdJ,CADF;AAmBD,KApCqD;AAAA;;AAqCxDO,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAE/B,cAAc,CAACgC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAEhC,cAAc,CAACiC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAQH;;AA9CuD","sourcesContent":["import React from 'react'\r\nimport {Link,BrowserRouter,Route} from 'react-router-dom'\r\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\r\n\r\nvar RankinglistCSS= require('./rankinglist.css')\r\n\r\nconst data = [];\r\nfor (let i = 0; i < 20; i++) {\r\n  data.push({\r\n    key: i.toString(),\r\n    name: `Edrward ${i}`,\r\n    age: 32,\r\n    address: `London Park no. ${i}`,\r\n  });\r\n}\r\nconst EditableContext = React.createContext();\r\n\r\nexport default class RankinglistPage extends React.Component{\r\n    getInput = () => {\r\n        if (this.props.inputType === 'number') {\r\n          return <InputNumber />;\r\n        }\r\n        return <Input />;\r\n      }; renderCell = ({ getFieldDecorator }) => {\r\n        const {\r\n          editing,\r\n          dataIndex,\r\n          title,\r\n          inputType,\r\n          record,\r\n          index,\r\n          children,\r\n          ...restProps\r\n        } = this.props;\r\n        return (\r\n          <td {...restProps}>\r\n            {editing ? (\r\n              <Form.Item style={{ margin: 0 }}>\r\n                {getFieldDecorator(dataIndex, {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: `Please Input ${title}!`,\r\n                    },\r\n                  ],\r\n                  initialValue: record[dataIndex],\r\n                })(this.getInput())}\r\n              </Form.Item>\r\n            ) : (\r\n              children\r\n            )}\r\n          </td>\r\n        );\r\n      };\r\n    render(){\r\n        return(\r\n            <div className={RankinglistCSS.menu}>\r\n            <div className={RankinglistCSS.addlist}>\r\n\r\n            </div>\r\n        </div>\r\n            \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}