{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/popconfirm/style/css\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport _objectSpread from \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Demo\\\\React-Administrator\\\\react-administrator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Demo\\\\React-Administrator\\\\react-administrator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Demo\\\\React-Administrator\\\\react-administrator\\\\src\\\\Menu\\\\Actlist\\\\actlist.js\";\nimport React from 'react';\nimport { Link, BrowserRouter, Route } from 'react-router-dom';\n\nvar ActlistCSS = require('./actlist.css');\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = (_ref) => {\n  let form = _ref.form,\n      index = _ref.index,\n      props = _objectWithoutProperties(_ref, [\"form\", \"index\"]);\n\n  return React.createElement(EditableContext.Provider, {\n    value: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"tr\", Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  })));\n};\n\nconst EditableFormRow = _Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: false\n    };\n\n    this.toggleEdit = () => {\n      const editing = !this.state.editing;\n      this.setState({\n        editing\n      }, () => {\n        if (editing) {\n          this.input.focus();\n        }\n      });\n    };\n\n    this.save = e => {\n      const _this$props = this.props,\n            record = _this$props.record,\n            handleSave = _this$props.handleSave;\n      this.form.validateFields((error, values) => {\n        if (error && error[e.currentTarget.id]) {\n          return;\n        }\n\n        this.toggleEdit();\n        handleSave(_objectSpread({}, record, values));\n      });\n    };\n\n    this.renderCell = form => {\n      this.form = form;\n      const _this$props2 = this.props,\n            children = _this$props2.children,\n            dataIndex = _this$props2.dataIndex,\n            record = _this$props2.record,\n            title = _this$props2.title;\n      const editing = this.state.editing;\n      return editing ? React.createElement(_Form.Item, {\n        style: {\n          margin: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, form.getFieldDecorator(dataIndex, {\n        rules: [{\n          required: true,\n          message: \"\".concat(title, \" is required.\")\n        }],\n        initialValue: record[dataIndex]\n      })(React.createElement(_Input, {\n        ref: node => this.input = node,\n        onPressEnter: this.save,\n        onBlur: this.save,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"editable-cell-value-wrap\",\n        style: {\n          paddingRight: 24\n        },\n        onClick: this.toggleEdit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, children);\n    };\n  }\n\n  render() {\n    const _this$props3 = this.props,\n          editable = _this$props3.editable,\n          dataIndex = _this$props3.dataIndex,\n          title = _this$props3.title,\n          record = _this$props3.record,\n          index = _this$props3.index,\n          handleSave = _this$props3.handleSave,\n          children = _this$props3.children,\n          restProps = _objectWithoutProperties(_this$props3, [\"editable\", \"dataIndex\", \"title\", \"record\", \"index\", \"handleSave\", \"children\"]);\n\n    return React.createElement(\"td\", Object.assign({}, restProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), editable ? React.createElement(EditableContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.renderCell) : children);\n  }\n\n}\n\nexport default class ActlistPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = key => {\n      const dataSource = [...this.state.dataSource];\n      this.setState({\n        dataSource: dataSource.filter(item => item.key !== key)\n      });\n    };\n\n    this.handleAdd = () => {\n      const _this$state = this.state,\n            count = _this$state.count,\n            dataSource = _this$state.dataSource;\n      const newData = {\n        key: count,\n        name: \"\\u7535\\u5F71 \".concat(count),\n        age: 2018,\n        poster: '<img src=\"\"></img>',\n        address: \"\\u7535\\u5F71\\u7B80\\u4ECB \".concat(count)\n      };\n      this.setState({\n        dataSource: [...dataSource, newData],\n        count: count + 1\n      });\n    };\n\n    this.handleSave = row => {\n      const newData = [...this.state.dataSource];\n      const index = newData.findIndex(item => row.key === item.key);\n      const item = newData[index];\n      newData.splice(index, 1, _objectSpread({}, item, row));\n      this.setState({\n        dataSource: newData\n      });\n    };\n\n    this.columns = [{\n      title: '电影名称',\n      dataIndex: 'name',\n      width: '10%',\n      editable: true\n    }, {\n      title: '上映时间',\n      dataIndex: 'age',\n      editable: true,\n      width: '10%'\n    }, {\n      title: '电影海报',\n      dataIndex: 'poster',\n      editable: true,\n      width: '40%'\n    }, {\n      title: '简介',\n      dataIndex: 'address',\n      editable: true,\n      width: '35%'\n    }, {\n      title: '功能',\n      dataIndex: 'operation',\n      width: '5%',\n      render: (text, record) => this.state.dataSource.length >= 1 ? React.createElement(_Popconfirm, {\n        title: \"\\u786E\\u5B9A\\u5220\\u9664?\",\n        onConfirm: () => this.handleDelete(record.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"javascript:;\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"\\u5220\\u9664\")) : null\n    }];\n    this.state = {\n      dataSource: [{\n        key: '0',\n        name: '罗马',\n        age: '2018',\n        poster: '<img src=\"\"></img>',\n        address: '奥斯卡导演最佳诚意之作'\n      }, {\n        key: '1',\n        name: '荒野猎人（国语）',\n        age: '2016',\n        poster: '<img src=\"\"></img>',\n        address: '休·格拉斯是一名皮草猎人，在一次打猎途中被一头熊殴打成重伤后被同行的乘船船长安德鲁·亨利救下，船长雇佣了两个人约翰·菲茨杰拉德和吉姆·布里杰来照顾他。约翰·菲茨杰拉德根本无心照顾格拉斯，一心只想着将格拉斯的财产占为己有，于是残忍的杀害了格拉斯的儿子，并说服吉姆·布里杰将格拉斯抛弃在荒野等死。两人原以为格拉斯就会这样离世，但格拉斯凭借坚强的毅力在野性的蛮荒之地穿行了好几个月，终于回到了安全地带并开始了复仇计划。'\n      }],\n      count: 3\n    };\n  }\n\n  render() {\n    const dataSource = this.state.dataSource;\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell\n      }\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n\n      return _objectSpread({}, col, {\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      });\n    });\n    return React.createElement(\"div\", {\n      className: ActlistCSS.menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: ActlistCSS.addlist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: ActlistCSS.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      onClick: this.handleAdd,\n      type: \"primary\",\n      style: {\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"\\u589E\\u52A0\\u7535\\u5F71\")), React.createElement(\"div\", {\n      className: ActlistCSS.add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      components: components,\n      rowClassName: () => 'editable-row',\n      bordered: true,\n      dataSource: dataSource,\n      columns: columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\DELL\\Desktop\\Demo\\React-Administrator\\react-administrator\\src\\Menu\\Actlist\\actlist.js"],"names":["React","Link","BrowserRouter","Route","ActlistCSS","require","EditableContext","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","Component","state","editing","toggleEdit","setState","input","focus","save","e","record","handleSave","validateFields","error","values","currentTarget","id","renderCell","children","dataIndex","title","margin","getFieldDecorator","rules","required","message","initialValue","node","paddingRight","render","editable","restProps","ActlistPage","constructor","handleDelete","key","dataSource","filter","item","handleAdd","count","newData","name","age","poster","address","row","findIndex","splice","columns","width","text","length","components","body","cell","map","col","onCell","menu","addlist","button","marginBottom","add"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Link,BrowserRouter,Route} from 'react-router-dom'\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nvar ActlistCSS= require('./actlist.css')\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  state = {\r\n    editing: false,\r\n  };\r\n\r\n  toggleEdit = () => {\r\n    const editing = !this.state.editing;\r\n    this.setState({ editing }, () => {\r\n      if (editing) {\r\n        this.input.focus();\r\n      }\r\n    });\r\n  };\r\n\r\n  save = e => {\r\n    const { record, handleSave } = this.props;\r\n    this.form.validateFields((error, values) => {\r\n      if (error && error[e.currentTarget.id]) {\r\n        return;\r\n      }\r\n      this.toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    });\r\n  };\r\n\r\n  renderCell = form => {\r\n    this.form = form;\r\n    const { children, dataIndex, record, title } = this.props;\r\n    const { editing } = this.state;\r\n    return editing ? (\r\n      <Form.Item style={{ margin: 0 }}>\r\n        {form.getFieldDecorator(dataIndex, {\r\n          rules: [\r\n            {\r\n              required: true,\r\n              message: `${title} is required.`,\r\n            },\r\n          ],\r\n          initialValue: record[dataIndex],\r\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{ paddingRight: 24 }}\r\n        onClick={this.toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editable,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      index,\r\n      handleSave,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editable ? (\r\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  }\r\n}\r\nexport default class ActlistPage extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.columns = [\r\n          {\r\n            title: '电影名称',\r\n            dataIndex: 'name',\r\n            width: '10%',\r\n            editable: true,\r\n          },\r\n          {\r\n            title: '上映时间',\r\n            dataIndex: 'age',\r\n            editable: true,\r\n            width: '10%',\r\n          },\r\n          {\r\n            title: '电影海报',\r\n            dataIndex: 'poster',\r\n            editable: true,\r\n            width: '40%',\r\n          },\r\n          {\r\n            title: '简介',\r\n            dataIndex: 'address',\r\n            editable: true,\r\n            width: '35%',\r\n          },\r\n          {\r\n            title: '功能',\r\n            dataIndex: 'operation',\r\n            width: '5%',\r\n            render: (text, record) =>\r\n              this.state.dataSource.length >= 1 ? (\r\n                <Popconfirm title=\"确定删除?\" onConfirm={() => this.handleDelete(record.key)}>\r\n                  <a href=\"javascript:;\">删除</a>\r\n                </Popconfirm>\r\n              ) : null,\r\n          },\r\n        ];\r\n    \r\n        this.state = {\r\n          dataSource: [\r\n            {\r\n              key: '0',\r\n              name: '罗马',\r\n              age: '2018',\r\n              poster:'<img src=\"\"></img>',\r\n              address: '奥斯卡导演最佳诚意之作',\r\n            },\r\n            {\r\n              key: '1',\r\n              name: '荒野猎人（国语）',\r\n              age: '2016',\r\n              poster:'<img src=\"\"></img>',\r\n              address: '休·格拉斯是一名皮草猎人，在一次打猎途中被一头熊殴打成重伤后被同行的乘船船长安德鲁·亨利救下，船长雇佣了两个人约翰·菲茨杰拉德和吉姆·布里杰来照顾他。约翰·菲茨杰拉德根本无心照顾格拉斯，一心只想着将格拉斯的财产占为己有，于是残忍的杀害了格拉斯的儿子，并说服吉姆·布里杰将格拉斯抛弃在荒野等死。两人原以为格拉斯就会这样离世，但格拉斯凭借坚强的毅力在野性的蛮荒之地穿行了好几个月，终于回到了安全地带并开始了复仇计划。',\r\n            },\r\n          ],\r\n          count: 3,\r\n        };\r\n      }\r\n    \r\n      handleDelete = key => {\r\n        const dataSource = [...this.state.dataSource];\r\n        this.setState({ dataSource: dataSource.filter(item => item.key !== key) });\r\n      };\r\n    \r\n      handleAdd = () => {\r\n        const { count, dataSource } = this.state;\r\n        const newData = {\r\n          key: count,\r\n          name: `电影 ${count}`,\r\n          age: 2018,\r\n          poster: '<img src=\"\"></img>',\r\n          address: `电影简介 ${count}`,\r\n        };\r\n        this.setState({\r\n          dataSource: [...dataSource, newData],\r\n          count: count + 1,\r\n        });\r\n      };\r\n    \r\n      handleSave = row => {\r\n        const newData = [...this.state.dataSource];\r\n        const index = newData.findIndex(item => row.key === item.key);\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n        this.setState({ dataSource: newData });\r\n      };\r\n    \r\n    render(){\r\n        const { dataSource } = this.state;\r\n        const components = {\r\n          body: {\r\n            row: EditableFormRow,\r\n            cell: EditableCell,\r\n          },\r\n        };\r\n        const columns = this.columns.map(col => {\r\n          if (!col.editable) {\r\n            return col;\r\n          }\r\n          return {\r\n            ...col,\r\n            onCell: record => ({\r\n              record,\r\n              editable: col.editable,\r\n              dataIndex: col.dataIndex,\r\n              title: col.title,\r\n              handleSave: this.handleSave,\r\n            }),\r\n          };\r\n        });\r\n        return(\r\n            <div className={ActlistCSS.menu}>\r\n            <div className={ActlistCSS.addlist}>\r\n                <div className={ActlistCSS.button}>\r\n            <Button onClick={this.handleAdd} type=\"primary\" style={{ marginBottom: 16 }}>\r\n          增加电影\r\n        </Button></div>\r\n        <div className={ActlistCSS.add}>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}/>\r\n            </div></div>\r\n        </div>\r\n            \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}